{"type":"data","nodes":[null,{"type":"data","data":[{"post":1},{"slug":2,"title":3,"date":4,"excerpt":5,"coverImage":6,"tags":7,"html":9,"readingTime":10,"relatedPosts":11},"project-structure","Project Structure","2023-04-22T21:55:21.800Z","How code and structure are organized.","\u002Fimages\u002Fposts\u002Fproject-structure.jpg",[8],"Documentation","\u003Cp\u003EThis project follows the basic \u003Ca href=\"https:\u002F\u002Fkit.svelte.dev\u002Fdocs\u002Fproject-structure\" rel=\"nofollow\"\u003ESvelteKit structure\u003C\u002Fa\u003E, with some added conventions to make customization a post-management easier.\u003C\u002Fp\u003E\n\u003Ch2 id=\"components\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#components\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EComponents\u003C\u002Fh2\u003E\n\u003Cp\u003EThe components are organized following the \u003Ca href=\"https:\u002F\u002Fmedium.com\u002F@WeAreMobile1st\u002Fatomic-design-getting-started-916bc81bad0e\" rel=\"nofollow\"\u003EAtomic Design\u003C\u002Fa\u003E principles, albeit somewhat simplified. Components are in the \u003Ccode\u003Esrc\u002Flib\u002Fcomponents\u003C\u002Fcode\u003E folder, and are organized in the following way:\u003C\u002Fp\u003E\n\u003Ch3 id=\"atoms\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#atoms\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EAtoms\u003C\u002Fh3\u003E\n\u003Cp\u003EAtoms are the most basic components, which can be seen as building blocks for other components. They’re small and self-contained, and do only one thing. Examples of atoms are buttons, inputs, and tags.\u003C\u002Fp\u003E\n\u003Ch3 id=\"molecules\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#molecules\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EMolecules\u003C\u002Fh3\u003E\n\u003Cp\u003EMolecules are groups of atoms that work together to form a more complex component. Examples of molecules are cards, groups of links, or an alert callout.\u003C\u002Fp\u003E\n\u003Ch3 id=\"organisms\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#organisms\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EOrganisms\u003C\u002Fh3\u003E\n\u003Cp\u003EOrganisms, in this project, are code blocks that represent a section of a page, such as the header, footer and hero section. They can be used directly in a page as a sort of building block, so the page’s code can be as simple as this:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block svelte-1pkpsrg\"\u003E\u003Cdiv class=\"filename svelte-1pkpsrg\"\u003E+page.svelte\u003C\u002Fdiv\u003E\n\t\u003Cdiv class=\"lang svelte-1pkpsrg\"\u003Ehtml\u003C\u002Fdiv\u003E\n\t\u003Cpre class=\"language-html\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-html\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token punctuation\"\u003E&lt;\u003C\u002Fspan\u003EHeader\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u002F\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token punctuation\"\u003E&lt;\u003C\u002Fspan\u003EHero\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u002F\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token punctuation\"\u003E&lt;\u003C\u002Fspan\u003EAbout\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u002F\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\n\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token tag\"\u003E\u003Cspan class=\"token punctuation\"\u003E&lt;\u003C\u002Fspan\u003EFooter\u003C\u002Fspan\u003E \u003Cspan class=\"token punctuation\"\u003E\u002F\u003E\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"component-gallery\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#component-gallery\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EComponent Gallery\u003C\u002Fh2\u003E\n\u003Cp\u003EThis project uses \u003Ca href=\"https:\u002F\u002Fhistoire.dev\" rel=\"nofollow\"\u003EHistoire\u003C\u002Fa\u003E to be able to see and develop components in isolation. To open it, run \u003Ccode\u003Enpm run story:dev\u003C\u002Fcode\u003E. This way you can customize and build new components with placeholder content and without worrying about where to put them in a page.\u003C\u002Fp\u003E\n\u003Ch2 id=\"pages\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#pages\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EPages\u003C\u002Fh2\u003E\n\u003Cp\u003EPages obey the default SvelteKit structure, but can be summarized as follows:\u003C\u002Fp\u003E\n\u003Cul\u003E\u003Cli\u003EThere are two different file types: the pages (\u003Ccode\u003E+page.svelte\u003C\u002Fcode\u003E) and the layouts (\u003Ccode\u003E+layout.svelte\u003C\u002Fcode\u003E). Layouts are a way to reuse the same structure between different pages without having to duplicate code;\u003C\u002Fli\u003E\n\u003Cli\u003EThere are two different page layouts in this site: the “Waves” layout, which all pages inside the \u003Ccode\u003E(waves)\u003C\u002Fcode\u003E folder use, and the “Blog Article” layout, which all pages inside the \u003Ccode\u003E(blog-article)\u003C\u002Fcode\u003E folder use;\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\u003Ch2 id=\"blog-posts\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#blog-posts\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EBlog Posts\u003C\u002Fh2\u003E\n\u003Cp\u003ETo know how blog posts work and how to create new ones, check out \u003Ca href=\"\u002Fblog-posts\"\u003EHow Blog Posts Work\u003C\u002Fa\u003E.\u003C\u002Fp\u003E","2 min read",[12,21],{"title":13,"slug":14,"coverImage":15,"date":16,"excerpt":17,"tags":18,"html":19,"readingTime":20},"How Blog Posts Work","blog-posts","\u002Fimages\u002Fposts\u002Fblog-posts.jpg","2023-04-22T21:55:15.361Z","How to manage existing blog posts and create new ones",[8],"\u003Cp\u003EAll blog posts are located inside the \u003Ccode\u003Esrc\u002Froutes\u002F(blog-article)\u003C\u002Fcode\u003E folder. Each folder inside it represents a blog post, and each folder has a \u003Ccode\u003E+page.md\u003C\u002Fcode\u003E file, which is the file that contains the post’s content.\u003C\u002Fp\u003E\n\u003Cp\u003EThis way, the URL for each blog post is generated with the folder’s name. For example, the folder \u003Ccode\u003Esrc\u002Froutes\u002F(blog-article)\u002Fhow-blog-posts-work\u003C\u002Fcode\u003E will generate the URL \u003Ccode\u003Ehttps:\u002F\u002Fmysite.com\u002Fhow-blog-posts-work\u003C\u002Fcode\u003E.\u003C\u002Fp\u003E\n\u003Cp\u003EAll posts are Markdown files, which means you can use the \u003Ca href=\"https:\u002F\u002Fwww.markdownguide.org\u002Fbasic-syntax\" rel=\"nofollow\"\u003EMarkdown syntax\u003C\u002Fa\u003E in them, and it will work out of the box. However, since this projects uses \u003Ca href=\"https:\u002F\u002Fmdsvex.pngwn.io\u002F\" rel=\"nofollow\"\u003EMDsveX\u003C\u002Fa\u003E to parse Markdown, you can also use Svelte components inside them! This means that the components used in other pages can also be used in blog posts.\u003C\u002Fp\u003E\n\u003Cdiv class=\"callout-block info svelte-sxx0n0\"\u003E\u003Cdiv class=\"icon-wrapper svelte-sxx0n0\"\u003E\u003Csvg width=\"100%\" height=\"100%\" stroke-width=\"1.5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http:\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\"\u003E\u003Cpath d=\"M12 11.5V16.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003E\u003C\u002Fpath\u003E\u003Cpath d=\"M12 7.51L12.01 7.49889\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003E\u003C\u002Fpath\u003E\u003Cpath d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\u003E\u003C\u002Fpath\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\n\tThis is a Svelte component inside a Markdown file!\n\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"processing\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#processing\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EProcessing\u003C\u002Fh2\u003E\n\u003Cp\u003EBesides the blog post page itself, the blog posts can be displayed in other places, such as the \u003Ccode\u003E\u002Fblog\u003C\u002Fcode\u003E page, which lists all blog posts, and the \u003Ccode\u003E&lt;RecentPosts&gt;\u003C\u002Fcode\u003E component, used in the home page.\u003C\u002Fp\u003E\n\u003Cp\u003ETo be able to do that, posts are processed in the \u003Ccode\u003Esrc\u002Flib\u002Fdata\u002Fblog-posts\u002Findex.ts\u003C\u002Fcode\u003E file. That file imports the blog post files and processes them, so we’re able to use some of the post’s metadata to list them. For example, we get the post’s title, cover image, and calculate the reading time based on its content, so that information is displayed in the blog post cards in the \u003Ccode\u003E\u002Fblog\u003C\u002Fcode\u003E page.\u003C\u002Fp\u003E\n\u003Cp\u003EThere is also some basic logic to get related posts based on a post’s tags. The logic should be straightforward enough to modify it to your needs.\u003C\u002Fp\u003E\n\u003Ch2 id=\"creating-a-new-post\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#creating-a-new-post\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003ECreating a new post\u003C\u002Fh2\u003E\n\u003Cp\u003ETo create a new post, create a new folder inside the \u003Ccode\u003Esrc\u002Froutes\u002F(blog-article)\u003C\u002Fcode\u003E folder, and inside it, create a \u003Ccode\u003E+page.md\u003C\u002Fcode\u003E file. The folder name will be used as the post’s URL slug, so make sure it’s a valid URL slug.\u003C\u002Fp\u003E\n\u003Cp\u003EInside the \u003Ccode\u003E+page.md\u003C\u002Fcode\u003E file, you must start with the front matter, which is a YAML-like syntax that is used to define metadata for the post. The front matter must be the first thing in the file, and must be separated from the rest of the content by three dashes (\u003Ccode\u003E---\u003C\u002Fcode\u003E). An example of a front matter is:\u003C\u002Fp\u003E\n\u003Cdiv class=\"code-block svelte-1pkpsrg\"\u003E\n\t\u003Cdiv class=\"lang svelte-1pkpsrg\"\u003Emarkdown\u003C\u002Fdiv\u003E\n\t\u003Cpre class=\"language-md\"\u003E\u003C!-- HTML_TAG_START --\u003E\u003Ccode class=\"language-md\"\u003E\u003Cspan class=\"token front-matter-block\"\u003E\u003Cspan class=\"token punctuation\"\u003E---\u003C\u002Fspan\u003E\n\u003Cspan class=\"token front-matter yaml language-yaml\"\u003Eslug: my-new-blog-post\ntitle: My New Blog Post\ndate: 2023-04-22T20:45:25.350Z\nexcerpt: A short description of the post\ncoverImage: \u002Fimages\u002Fposts\u002Fcover-image.jpg\ntags:\n  - Example\u003C\u002Fspan\u003E\n\u003Cspan class=\"token punctuation\"\u003E---\u003C\u002Fspan\u003E\u003C\u002Fspan\u003E\u003C\u002Fcode\u003E\u003C!-- HTML_TAG_END --\u003E\u003C\u002Fpre\u003E\n\u003C\u002Fdiv\u003E\n\u003Ch2 id=\"managing-blog-posts\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#managing-blog-posts\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EManaging blog posts\u003C\u002Fh2\u003E\n\u003Cp\u003EI highly recommend the \u003Ca href=\"https:\u002F\u002Ffrontmatter.codes\u002F\" rel=\"nofollow\"\u003EFront Matter VS Code extension\u003C\u002Fa\u003E to manage blog posts. It gives you a nice CMS-like UI to manage the front matter of all blog posts, as well as a preview of their content. It is, of course, optional, and you can manage everything directly in the Markdown files if you prefer.\u003C\u002Fp\u003E\n\u003Cimg srcset=\"\u002Fimages\u002Fposts\u002Ffrontmatter-preview-dashboard.avif, \u002Fimages\u002Fposts\u002Ffrontmatter-preview-dashboard.webp, \u002Fimages\u002Fposts\u002Ffrontmatter-preview-dashboard.png\" src=\"\u002Fimages\u002Fposts\u002Ffrontmatter-preview-dashboard.png\" alt=\"Screenshot of the Front Matter VS Code extension, showing the dashboard with all posts\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1ykl0dj full-bleed\"\u003E\n\u003Cimg srcset=\"\u002Fimages\u002Fposts\u002Ffrontmatter-preview-edit.avif, \u002Fimages\u002Fposts\u002Ffrontmatter-preview-edit.webp, \u002Fimages\u002Fposts\u002Ffrontmatter-preview-edit.png\" src=\"\u002Fimages\u002Fposts\u002Ffrontmatter-preview-edit.png\" alt=\"Screenshot of the Front Matter VS Code extension, showing the post editing UI\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1ykl0dj full-bleed\"\u003E\n\u003Ch2 id=\"rss\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#rss\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003ERSS\u003C\u002Fh2\u003E\n\u003Cp\u003EThis template automatically generates a RSS feed of your blog posts. It is generated in the \u003Ccode\u003Esrc\u002Froutes\u002Frss.xml\u002F+server.ts\u003C\u002Fcode\u003E file, and it is available at the \u003Ccode\u003E\u002Frss.xml\u003C\u002Fcode\u003E URL.\u003C\u002Fp\u003E","3 min read",{"slug":22,"title":23,"date":24,"excerpt":25,"coverImage":26,"tags":27,"html":28,"readingTime":20},"customization","How to Customize this Template","2023-04-22T21:55:27.154Z","How to customize what you're seeing here and make it your own.","\u002Fimages\u002Fposts\u002Fcustomization.jpg",[8],"\u003Cp\u003EIn general, content can be modified by editing the \u003Cstrong\u003Eorganisms\u003C\u002Fstrong\u003E and the pages themselves. Below is a list of the most common changes that you may want to make.\u003C\u002Fp\u003E\n\u003Ch2 id=\"domainsite-url\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#domainsite-url\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EDomain\u002Fsite URL\u003C\u002Fh2\u003E\n\u003Cp\u003EThe first thing you might want to do is replace the domain of of the site with your own. There are two places where you need to do that:\u003C\u002Fp\u003E\n\u003Cul\u003E\u003Cli\u003EIn the \u003Ccode\u003Epackage.json\u003C\u002Fcode\u003E file, check the \u003Ccode\u003Epostbuild\u003C\u002Fcode\u003E script. Change the domain there to your own, so it ends up like this: \u003Ccode\u003Esvelte-sitemap --domain https:\u002F\u002Fyour-domain.com\u003C\u002Fcode\u003E. This is used to generate the sitemap of your website, which is used by search engines to index your site.\u003C\u002Fli\u003E\n\u003Cli\u003EIn the \u003Ccode\u003Esrc\u002Flib\u002Fdata\u002Fmeta.ts\u003C\u002Fcode\u003E file, change the \u003Ccode\u003EsiteBaseUrl\u003C\u002Fcode\u003E property to your own domain. This is used in multiple parts of the app wherever the site needs to link to itself.\u003C\u002Fli\u003E\u003C\u002Ful\u003E\n\u003Ch2 id=\"headersite-logo\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#headersite-logo\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EHeader\u002Fsite logo\u003C\u002Fh2\u003E\n\u003Cp\u003ETo replace the logo that appears in the header, modify or replace the contents of the \u003Ccode\u003ELogo.svelte\u003C\u002Fcode\u003E atom.\u003C\u002Fp\u003E\n\u003Cp\u003EThe links that appear on the header can be modified directly in the \u003Ccode\u003EHeader.svelte\u003C\u002Fcode\u003E organism.\u003C\u002Fp\u003E\n\u003Ch2 id=\"hero-section\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#hero-section\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EHero section\u003C\u002Fh2\u003E\n\u003Cp\u003EThe hero section is the first section of the site’s home page. It is composed of a Heading, the \u003Cem\u003Eintro\u003C\u002Fem\u003E text, and a list of buttons\u002FCTAs. The contents of this section can be modified directly in the \u003Ccode\u003EHero.svelte\u003C\u002Fcode\u003E organism.\u003C\u002Fp\u003E\n\u003Ch2 id=\"about-section\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#about-section\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EAbout section\u003C\u002Fh2\u003E\n\u003Cp\u003EThe about section contains another headline, a paragraph of text, some social media links, and optionally an image. The contents of this section can be modified directly in the \u003Ccode\u003EAbout.svelte\u003C\u002Fcode\u003E organism.\u003C\u002Fp\u003E\n\u003Ch2 id=\"social-links\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#social-links\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003ESocial Links\u003C\u002Fh2\u003E\n\u003Cp\u003EThe social links are contained in the \u003Ccode\u003ESocials.svelte\u003C\u002Fcode\u003E molecule and can be used in any page. This template shows them on the About section and in the Footer.\u003C\u002Fp\u003E\n\u003Ch2 id=\"footer\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#footer\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EFooter\u003C\u002Fh2\u003E\n\u003Cp\u003EThe footer contains some credits, a list of social links, and the RSS\u002FTheme toggle. The contents of this section can be modified directly in the \u003Ccode\u003EFooter.svelte\u003C\u002Fcode\u003E organism.\u003C\u002Fp\u003E\n\u003Ch2 id=\"colors\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#colors\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EColors\u003C\u002Fh2\u003E\n\u003Cp\u003EYou can change the color palette of the website just by tweaking the \u003Ccode\u003E_themes.scss\u003C\u002Fcode\u003E file. The file uses the \u003Ccode\u003Edefine-color\u003C\u002Fcode\u003E scss function to automatically set the color variables in Hex, RGB and HSL formats, so you can choose whichever format you need.\u003C\u002Fp\u003E\n\u003Cp\u003EThe main theme colors (primary and secondary) have two variants: shade and tint. The shade is a lighter version of the color (darker in dark mode), and the tint should almost match the page’s background, so that in light mode, it’s really bright, and in dark mode, it’s really dark.\u003C\u002Fp\u003E\n\u003Ch2 id=\"fonts\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#fonts\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EFonts\u003C\u002Fh2\u003E\n\u003Cp\u003EThis template uses the Inter, Merriweather and Ubuntu Mono font families. You can change the font family by editing the \u003Ccode\u003E_variables.scss\u003C\u002Fcode\u003E file, and the code is already set up to accept a default font, a heading font, and a monospace font.\u003C\u002Fp\u003E\n\u003Cp\u003EI recommend using \u003Ca href=\"https:\u002F\u002Ffontsource.org\u002F\" rel=\"nofollow\"\u003EFontsource\u003C\u002Fa\u003E to import the fonts you need, or self-hosting them. In case you’re using Fontsource, you can import the fonts in \u003Ccode\u003Eglobal.scss\u003C\u002Fcode\u003E file to make sure they’re available in the entire site.\u003C\u002Fp\u003E\n\u003Ch2 id=\"favicon\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#favicon\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003EFavicon\u003C\u002Fh2\u003E\n\u003Cp\u003EFavicons are located in the \u003Ccode\u003Estatic\u002Ffavicons\u003C\u002Fcode\u003E folder. I like to use \u003Ca href=\"https:\u002F\u002Frealfavicongenerator.net\" rel=\"nofollow\"\u003EReal Favicon Generator\u003C\u002Fa\u003E to generate mine, but you can use any other tool you like. I wrote \u003Ca href=\"https:\u002F\u002Ffantinel.dev\u002Ffixing-favicons\" rel=\"nofollow\"\u003Ea blog post about Favicons\u003C\u002Fa\u003E in case you want to learn more about them.\u003C\u002Fp\u003E\n\u003Ch2 id=\"social-media-link-preview\"\u003E\u003Ca class=\"heading-link\" title=\"Permalink\" aria-hidden=\"true\" href=\"#social-media-link-preview\"\u003E\u003Cspan\u003E#\u003C\u002Fspan\u003E\u003C\u002Fa\u003ESocial Media Link Preview\u003C\u002Fh2\u003E\n\u003Cp\u003EYou probably want to customize how links to your website look when posted on social media\u002Fmessaging apps. To do that, you can edit the info in \u003Ccode\u003Esrc\u002Flib\u002Fdata\u002Fmeta.ts\u003C\u002Fcode\u003E. There, you can edit the site’s title, description, tags (used by search engines) and the image that appears when sharing a link.\u003C\u002Fp\u003E"],"uses":{"url":1}},null]}
